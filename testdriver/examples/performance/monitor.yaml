version: 6.0.0
session: 67f00511acbd9ccac373edf7
steps:
  - prompt: download and run npm
    commands:
      - command: exec
        lang: pwsh
        code: |
          # Set the output log file path
          $logFile = "$PSScriptRoot\SystemUsageLog.csv"

          # Write header if the log file does not exist
          if (!(Test-Path $logFile)) {
              "Timestamp,CPU_Usage_Percent,Memory_Used_MB,Memory_Total_MB,Memory_Usage_Percent" | Out-File $logFile
          }

          # Monitor loop
          while ($true) {
              $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"

              # Get CPU usage
              $cpuUsage = Get-Counter '\Processor(_Total)\% Processor Time'
              $cpuValue = [math]::Round($cpuUsage.CounterSamples.CookedValue, 2)

              # Get memory usage
              $comp = Get-CimInstance Win32_OperatingSystem
              $totalMemory = [math]::Round($comp.TotalVisibleMemorySize / 1024, 2)
              $freeMemory = [math]::Round($comp.FreePhysicalMemory / 1024, 2)
              $usedMemory = [math]::Round($totalMemory - $freeMemory, 2)
              $memPercent = [math]::Round(($usedMemory / $totalMemory) * 100, 2)

              # Append log entry
              "$timestamp,$cpuValue,$usedMemory,$totalMemory,$memPercent" | Out-File -Append -Encoding utf8 $logFile

              # Output to screen (optional)
              Write-Host "$timestamp | CPU: $cpuValue% | RAM: $usedMemory / $totalMemory MB ($memPercent%)"

              # Wait before next poll
              Start-Sleep -Seconds 5
          }
